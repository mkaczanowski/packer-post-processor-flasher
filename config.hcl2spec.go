// Code generated by "mapstructure-to-hcl2 -type FlasherConfig"; DO NOT EDIT.
package main

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatFlasherConfig is an auto-generated flat version of FlasherConfig.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatFlasherConfig struct {
	Device      *string `mapstructure:"device" cty:"device"`
	Interactive *bool   `mapstructure:"interactive" cty:"interactive"`
	BlockSize   *int    `mapstructure:"block_size" cty:"block_size"`
}

// FlatMapstructure returns a new FlatFlasherConfig.
// FlatFlasherConfig is an auto-generated flat version of FlasherConfig.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*FlasherConfig) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatFlasherConfig)
}

// HCL2Spec returns the hcl spec of a FlasherConfig.
// This spec is used by HCL to read the fields of FlasherConfig.
// The decoded values from this spec will then be applied to a FlatFlasherConfig.
func (*FlatFlasherConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"device":      &hcldec.AttrSpec{Name: "device", Type: cty.String, Required: false},
		"interactive": &hcldec.AttrSpec{Name: "interactive", Type: cty.Bool, Required: false},
		"block_size":  &hcldec.AttrSpec{Name: "block_size", Type: cty.Number, Required: false},
	}
	return s
}
